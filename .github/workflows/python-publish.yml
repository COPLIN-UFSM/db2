# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/


name: Publish Python distribution

on: push

jobs:
  build:
    name: Build distribution and update documentation ⚙️📦📄
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -el {0}
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
      pages: write  # IMPORTANT: mandatory for deploying to GitHub pages

    steps:
    - name: Setup - Checkout repository (download code to GitHub workspace)
      uses: actions/checkout@v4
    - name: Setup - Install dependencies with conda
      uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true
        activate-environment: db2
        environment-file: env_linux.yml
    - name: Build - Build a binary wheel and a source tarball
      run: python -m build
    - name: Build - Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Documentation - install library locally for autodoc
      run: pip install -e .
    - name: Documentation - Build documentation with Sphinx
      run: make html
    - name: Documentation - Disable Jekyll
      run: touch docs/.nojekyll
    - name: Documentation - Setup GitHub Pages
      uses: actions/configure-pages@v3
    - name: Documentation - Upload Artifact
      uses: actions/upload-pages-artifact@v3
      with:
        # Upload docs directory content
        path: 'docs/'
    - name: Documentation - Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-to-pypi:
    name: >-
      Publish to PyPI 🐍📦
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/coplin-db2
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution 📦 to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: >-
      Sign the distribution ✍️🐍
      and upload them to GitHub Release
    needs:
      - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          '${{ github.ref_name }}'
          --repo '${{ github.repository }}'
          --notes ""
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        # Upload to GitHub Release using the `gh` CLI.
        # `dist/` contains the built packages, and the
        # sigstore-produced signatures and certificates.
        run: >-
          gh release upload
          '${{ github.ref_name }}' dist/**
          --repo '${{ github.repository }}'

  publish-to-testpypi:
    name: Publish to TestPyPI 🐍📦
    needs:
      - build
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/coplin-db2

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution 📦 to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/